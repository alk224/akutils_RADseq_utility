#!/usr/bin/env bash
#
#  RADseq_utility - master script for processing raw RADseq data all the way through Stacks pipline
#
#  Version 0.9 (February 25, 2016)
#
#  Copyright (c) 2015-2016 Andrew Krohn
#
#  This software is provided 'as-is', without any express or implied
#  warranty. In no event will the authors be held liable for any damages
#  arising from the use of this software.
#
#  Permission is granted to anyone to use this software for any purpose,
#  including commercial applications, and to alter it and redistribute it
#  freely, subject to the following restrictions:
#
#  1. The origin of this software must not be misrepresented; you must not
#     claim that you wrote the original software. If you use this software
#     in a product, an acknowledgment in the product documentation would be
#     appreciated but is not required.
#  2. Altered source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.
#  3. This notice may not be removed or altered from any source distribution.
#
## Trap function on exit.
function finish {
if [[ -f $stdout ]]; then
	rm $stdout
fi
if [[ -f $stderr ]]; then
	rm $stderr
fi
}
trap finish EXIT

## Find scripts and repository location.
	scriptdir="$(cd "$(dirname "$0")" && pwd)"
	repodir=`dirname $scriptdir`
	tempdir="$repodir/temp/"

## Set working directory and other important variables
	workdir=$(pwd)
	randcode=`cat /dev/urandom |tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1` 2>/dev/null
	stderr=($repodir/temp/$randcode\_stderr)
	stdout=($repodir/temp/$randcode\_stdout)

## Usage and help
	usage="$repodir/docs/RADseq_utility.usage"
	help="$repodir/docs/RADseq_utility.help"

## Check whether user had supplied -h or --help. If yes display help 
	if [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]] || [[ "$1" == "help" ]]; then
		less $help
		exit 0
	fi

## Find config file and run config utility if necessary
	globalconfigsearch=(`ls $repodir/resources/akutils_RADseq.global.config 2>/dev/null`)
	localconfigsearch=(`ls akutils_RADseq*.config 2>/dev/null`)
	if [[ -f "$localconfigsearch" ]]; then
		configfile="$localconfigsearch"
		globallocal="local"
	elif [[ -f "$globalconfigsearch" ]]; then
		configfile="$globalconfigsearch"
		globallocal="global"
	else
	echo "
No config file is present.  Running config utility to establish configurable
options.
	"
	bash $scriptdir/configure_slave.sh $stdout $stderr $randcode
	exit 0
	fi

## Check whether user supplied print_config.  If yes, list config options.
	if [[ "$1" == "print_config" ]]; then
	bash $scriptdir/readconfig_slave.sh $configfile $globallocal $stdout $stderr $randcode
	exit 0
	fi

## Check whether user supplied configure.  If yes, run config utility.
	if [[ "$1" == "configure" ]]; then
	if [[ "$#" == "1" ]]; then
	bash $scriptdir/configure_slave.sh $stdout $stderr $randcode
	exit 0
	elif [[ "$2" == "help" ]]; then
	less $repodir/docs/configure.help
	exit 0
	elif [[ "$#" == "3" ]]; then
	bash $scriptdir/configure_setting_slave.sh $stdout $stderr $randcode $2 $3
	exit 0
	fi
	fi

## If user supplied demult-derep, then execute demult-derep script
	if [[ "$1" == "demult-derep" ]]; then
		if [[ -z "$2" ]]; then
		cat $repodir/docs/demult-derep.usage
		exit 0
		elif [[ "$2" == "help" ]]; then
		less $repodir/docs/demult-derep.help
		exit 0
		fi
	bash $scriptdir/RADseq_demult-derep.sh $stdout $stderr $randcode $configfile $globallocal $2 $3 $4 $5
	exit 0
	fi

## If user supplied workflow, then execute workflow script
	if [[ "$1" == "workflow" ]]; then
		if [[ -z "$2" ]]; then
		cat $repodir/docs/RADseq_workflow.usage
		exit 0
		elif [[ "$2" == "help" ]]; then
		less $repodir/docs/RADseq_workflow.help
		exit 0
		fi
	bash $scriptdir/RADseq_workflow.sh $stdout $stderr $randcode $configfile $globallocal $2 $3
	exit 0
	fi

## If user supplied db-load, then execute db-load script
	if [[ "$1" == "db-load" ]]; then
		if [[ -z "$2" ]]; then
		cat $repodir/docs/db-load.usage
		exit 0
		elif [[ "$2" == "help" ]]; then
		less $repodir/docs/db-load.help
		exit 0
		fi
	bash $scriptdir/db-load.sh $stdout $stderr $randcode $2
	exit 0
	fi

## If user supplied db-unload, then execute db-unload script
	if [[ "$1" == "db-unload" ]]; then
		if [[ -z "$2" ]]; then
		cat $repodir/docs/db-unload.usage
		exit 0
		elif [[ "$2" == "help" ]]; then
		less $repodir/docs/db-unload.help
		exit 0
		fi
	bash $scriptdir/db-unload.sh $stdout $stderr $randcode $2
	exit 0
	fi

## If user supplied metadata_instructions, then show metadata_instructions
	if [[ "$1" == "metadata_instructions" ]]; then
		less $repodir/resources/metadata_instructions.txt
	exit 0
	fi

## If user supplied metadata, then run metadata builder
	if [[ "$1" == "metadata" ]]; then
		bash $repodir/scripts/metadata_builder.sh
	exit 0
	fi

## If different than 5 or 6 arguments supplied, display usage 
	if [[ "$#" -le 4 ]] || [[ "$#" -ge 7 ]]; then 
		cat $repodir/docs/RADseq_utility.usage
		exit 1
	fi

## Display usage for non-parseable command.
	cat $usage

exit 0

#########################
## Spare code below here:
#########################

## Timing code
res2=$(date +%s.%N)
res3=$(date +%s.%N)
dt=$(echo "$res3 - $res2" | bc)
dd=$(echo "$dt/86400" | bc)
dt2=$(echo "$dt-86400*$dd" | bc)
dh=$(echo "$dt2/3600" | bc)
dt3=$(echo "$dt2-3600*$dh" | bc)
dm=$(echo "$dt3/60" | bc)
ds=$(echo "$dt3-60*$dm" | bc)
runtime=`printf "Function runtime: %d days %02d hours %02d minutes %02.1f seconds\n" $dd $dh $dm $ds`
echo "$runtime
" >> $log


